<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title>Murathan Goktas</title>
    <subtitle>Computer scientist and bioinformatician based in Vancouver.</subtitle>
    <link href="https://murathangoktas.github.io/feed.xml" rel="self" type="application/atom+xml" />
    <link href="https://murathangoktas.github.io" rel="alternate" type="text/html"/>
    <author>
        <name>Murathan Goktas</name>
    </author>
    
    <updated>2023-05-01T00:00:00Z</updated>
    
    <id>https://murathangoktas.github.io/</id>
        <entry>
            <title>Why Election Debates are a Must</title>
            <link href="https://murathangoktas.github.io/blog/why-election-debates-are-a-must/"/>
            <updated>2023-05-01T00:00:00Z</updated>
            <id>https://murathangoktas.github.io/blog/why-election-debates-are-a-must/</id>
            <content type="html"><![CDATA[
                <figure>
  <img src="https://murathangoktas.github.io/blog/why-election-debates-are-a-must/cover.jpg" alt="" />
</figure>
<p class="lead">Multi-index Bloom filter (mi-Bf) is a flavour of the Bloom filter. I spent most of my Master's studies working on it and developed a long-read mapper, and a global ancestry inference model. First one failed, second one succeeded. To understand why we first have to understand mi-Bf.</p>
<p>Earlier this week, I was sitting in a train on my way to speak at a local meetup. InterCity trains in Austria all have WIFI now, so I was doing some last-minute work on my slides online. Train WIFI being what it is though, the network wasn’t exactly reliable. The connection kept dropping everytime we went through a tunnel or too many passengers were logged on.</p>
<p>This is quite a common scenario. People are on the move, network coverage can be poor, internet connections fail. Luckily, we can prepare our websites for this and make them more resilient by <a href="https://bitsofco.de/bitsofcode-pwa-part-1-offline-first-with-service-worker/">building them offline-first</a>.</p>
<p>Offline support is awesome, however your users might not be aware of these capabilites - and they shouldn’t have to be. In some cases they might not even know that they’ve gone offline. That’s why it’s important to communicate what’s going on.</p>
<p>Chances are not <strong>every</strong> part of your site will work offline. Certain things may not be cached, others may require server interaction. This is fine of course, but the interface should reflect that. Just like a responsive layout adapts to changes in viewport size, your offline-optimized site should adapt to changes in connectivity.</p>
<h2 id="h-checking-for-offline"><a class="heading-anchor" href="https://murathangoktas.github.io/blog/why-election-debates-are-a-must/#h-checking-for-offline" aria-hidden="true">#</a> Checking for Offline</h2>
<p>The key ingredients here are the <code>offline</code> event and the <code>navigator.onLine</code> property. By combining them, we can check for network changes and react accordingly.</p>
<p>Here’s an example of a simple connectivity check:</p>
<pre class="language-js"><code class="language-js"><span class="token keyword">let</span> isOffline <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span><br />window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'load'</span><span class="token punctuation">,</span> checkConnectivity<span class="token punctuation">)</span><span class="token punctuation">;</span><br /><br /><span class="token comment">// when the page has finished loading,</span><br /><span class="token comment">// listen for future changes in connection</span><br /><span class="token keyword">function</span> <span class="token function">checkConnectivity</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />  <span class="token function">updateStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br />  window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'online'</span><span class="token punctuation">,</span> updateStatus<span class="token punctuation">)</span><span class="token punctuation">;</span><br />  window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'offline'</span><span class="token punctuation">,</span> updateStatus<span class="token punctuation">)</span><span class="token punctuation">;</span><br /><span class="token punctuation">}</span><br /><br /><span class="token comment">// check if we're online, set a class on &lt;html> if not</span><br /><span class="token keyword">function</span> <span class="token function">updateStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> navigator<span class="token punctuation">.</span>onLine <span class="token operator">!==</span> <span class="token string">'undefined'</span><span class="token punctuation">)</span><span class="token punctuation">{</span><br />    isOffline <span class="token operator">=</span> <span class="token operator">!</span>navigator<span class="token punctuation">.</span>onLine<span class="token punctuation">;</span><br />    document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">toggle</span><span class="token punctuation">(</span><span class="token string">'is-offline'</span><span class="token punctuation">,</span> isOffline<span class="token punctuation">)</span><span class="token punctuation">;</span><br />    <span class="token operator">...</span><br />  <span class="token punctuation">}</span><br /><span class="token punctuation">}</span></code></pre>
<p>⚠️ Note: With the <code>online</code> event, there’s a slight possibility of false positives: A user might be connected to a network (which is interpreted as being online), but something higher up might block actual internet access. The <code>offline</code> event is a bit more reliable, in the sense that an “offline” user can be expected <strong>NOT</strong> to have access.</p>
<h2 id="h-get-notified"><a class="heading-anchor" href="https://murathangoktas.github.io/blog/why-election-debates-are-a-must/#h-get-notified" aria-hidden="true">#</a> Get Notified</h2>
<p>Now we want to display some kind of notification to offline users, so they know what’s going on. This can be done in a number of ways; however I would recommend using <code>aria-live</code> regions to make it accessible and have screen readers announce the connection change as well.</p>
<p>Using such a notification bar is pretty straightforward. First, define an element to display messages on your page:</p>
<pre class="language-html"><code class="language-html"><span class="token comment">&lt;!-- notification container --></span><br /><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <br />  <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>notification<span class="token punctuation">"</span></span> <br />  <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>notification<span class="token punctuation">"</span></span> <br />  <span class="token attr-name">aria-live</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>assertive<span class="token punctuation">"</span></span> <br />  <span class="token attr-name">aria-relevant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <br />  <span class="token attr-name">hidden</span><br /><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code></pre>
<p>The <code>aria-live</code> attribute tells screen readers to announce changes to this element. “assertive” means it will interrupt whatever it is currently announcing at the time and prioritize the new message. The <code>aria-relevant</code> tells it to listen for changes in the text content of the element.</p>
<p>You can extend the handler function from before to populate the notification area whenever you detect that a user has gone offline:</p>
<pre class="language-js"><code class="language-js"><span class="token keyword">function</span> <span class="token function">updateStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />  <span class="token operator">...</span><br />  <span class="token keyword">const</span> notification <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'#notification'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br />  <span class="token keyword">if</span> <span class="token punctuation">(</span>isOffline<span class="token punctuation">)</span> <span class="token punctuation">{</span><br />    notification<span class="token punctuation">.</span>textContent <span class="token operator">=</span> <span class="token string">'You appear to be offline right now.'</span><span class="token punctuation">;</span><br />    notification<span class="token punctuation">.</span><span class="token function">removeAttribute</span><span class="token punctuation">(</span><span class="token string">'hidden'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br />  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span><br />    notification<span class="token punctuation">.</span>textContent <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">;</span><br />    notification<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">'hidden'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br />  <span class="token punctuation">}</span><br /><span class="token punctuation">}</span></code></pre>
<p>This is a very simple implementation - you can of course always get a bit fancier with an animated notification bar (or “toast message”). There are also some nice <a href="https://getmdl.io/components/index.html#snackbar-section">pre-made components</a> for this.</p>
<p>If you’re reading this on <a href="https://mxb.at/">my site</a>, you can see a version of these notifications in action if you simply switch off your WIFI for a second.<br />
Go ahead, I’ll wait.</p>
<p>If you’re somewhere else or your browser doesn’t support service worker / offline events, here’s how this could look:</p>
<div class="extend" style="margin-top:2rem;">
  <video poster="https://murathangoktas.github.io/blog/why-election-debates-are-a-must/offline-notification.png" width="944" height="528" alt="Offline Notification" controls="">
    <source src="https://murathangoktas.github.io/blog/why-election-debates-are-a-must/offline-notification.webm" type="video/webm" />
    <source src="https://murathangoktas.github.io/blog/why-election-debates-are-a-must/offline-notification.mp4" type="video/mp4" />
  </video>
</div>
<h2 id="h-telling-the-user-what%E2%80%99s-available"><a class="heading-anchor" href="https://murathangoktas.github.io/blog/why-election-debates-are-a-must/#h-telling-the-user-what%E2%80%99s-available" aria-hidden="true">#</a> Telling the User what’s available</h2>
<p>Notifications are a good start, but it would be even nicer if we could give the user some visual indication of which parts they can actually use offline, and which not.</p>
<p>To do this, we can loop over all the links on page load and check their <code>href</code> against the cache. If they point to a cached resource (e.g. will work offline), they get a special class.</p>
<pre class="language-js"><code class="language-js"><span class="token keyword">const</span> links <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">'a[href]'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br />Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>links<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">link</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span><br />  caches<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span>link<span class="token punctuation">.</span>href<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">ignoreSearch</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">response</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span><br />    <span class="token keyword">if</span> <span class="token punctuation">(</span>response<span class="token punctuation">)</span> <span class="token punctuation">{</span><br />      link<span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">'is-cached'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br />    <span class="token punctuation">}</span><br />  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>
<p>Once the <code>offline</code> event fires, we toggle a class on the body and visually disable all links that aren’t cached. This should only apply to URLs, so we can ignore <code>tel:</code>, <code>mailto:</code> and anchor links.</p>
<pre class="language-scss"><code class="language-scss"><span class="token selector">.is-offline </span><span class="token punctuation">{</span><br />  <span class="token comment">/* disable all links to uncached pages */</span><br />  <span class="token property">a</span><span class="token punctuation">:</span><span class="token function">not</span><span class="token punctuation">(</span>.is-cached<span class="token punctuation">)</span> <span class="token punctuation">{</span><br />    <span class="token property">cursor</span><span class="token punctuation">:</span>not-allowed<span class="token punctuation">;</span><br />    <span class="token property">pointer-events</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span><br />    <span class="token property">opacity</span><span class="token punctuation">:</span>.5<span class="token punctuation">;</span><br />  <span class="token punctuation">}</span><br />  <span class="token comment">/* ignore anchors, email and phone links */</span><br />  <span class="token selector">a[href^="#"],<br />  a[href^="mailto"],<br />  a[href^="tel"] </span><span class="token punctuation">{</span><br />    <span class="token property">cursor</span><span class="token punctuation">:</span>auto<span class="token punctuation">;</span><br />    <span class="token property">pointer-events</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span><br />    <span class="token property">opacity</span><span class="token punctuation">:</span>1<span class="token punctuation">;</span><br />  <span class="token punctuation">}</span><br /><span class="token punctuation">}</span></code></pre>
<h2 id="h-offline-forms"><a class="heading-anchor" href="https://murathangoktas.github.io/blog/why-election-debates-are-a-must/#h-offline-forms" aria-hidden="true">#</a> Offline Forms</h2>
<p>Another way we might use this is to prevent users from filling out forms. Most forms pass data to the server and require a connection to work, so they won’t be very useful when offline.</p>
<p>What’s worse is that users might not know there is a problem until it’s too late: imagine filling out a lengthy form and finally hitting the submit button, only to find a network connection error page and all your inputs gone. That’s frustrating.</p>
<pre class="language-scss"><code class="language-scss"><span class="token comment">/* Disable Forms when offline */</span><br /><span class="token selector">.is-offline form </span><span class="token punctuation">{</span><br />  <span class="token property">position</span><span class="token punctuation">:</span>relative<span class="token punctuation">;</span><br />  <span class="token property">opacity</span><span class="token punctuation">:</span>.65<span class="token punctuation">;</span><br />  <span class="token property">cursor</span><span class="token punctuation">:</span>not-allowed<span class="token punctuation">;</span><br />  <span class="token property">pointer-events</span><span class="token punctuation">:</span>none<span class="token punctuation">;</span><br />  <br />  <span class="token selector"><span class="token parent important">&amp;</span>::after </span><span class="token punctuation">{</span><br />    <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">'Sorry, you\'re offline.'</span><span class="token punctuation">;</span><br />    <span class="token property">display</span><span class="token punctuation">:</span>block<span class="token punctuation">;</span><br />    <span class="token property">position</span><span class="token punctuation">:</span>absolute<span class="token punctuation">;</span><br />    <span class="token property">top</span><span class="token punctuation">:</span>50%<span class="token punctuation">;</span><br />    <span class="token property">left</span><span class="token punctuation">:</span>50%<span class="token punctuation">;</span><br />    <span class="token property">transform</span><span class="token punctuation">:</span><span class="token function">translate</span><span class="token punctuation">(</span>-50%<span class="token punctuation">,</span> -50%<span class="token punctuation">)</span><span class="token punctuation">;</span><br />    <span class="token property">color</span><span class="token punctuation">:</span>#FFFFFF<span class="token punctuation">;</span><br />    <span class="token property">background-color</span><span class="token punctuation">:</span>#2D2D2D<span class="token punctuation">;</span><br />    <span class="token property">padding</span><span class="token punctuation">:</span>1rem 2rem<span class="token punctuation">;</span><br />  <span class="token punctuation">}</span><br /><span class="token punctuation">}</span></code></pre>
<figure>
  <img src="https://murathangoktas.github.io/blog/why-election-debates-are-a-must/form-offline.jpg" alt="a disabled form with the words 'sorry, youre offline' in a box on top" />
  <figcaption>No contact forms in offline country.</figcaption>
</figure>
<p>That effectively disables every form on the page, indicating that this functionality is currently not available. Depending on what your form does, you might also consider applying these styles just to the submit button - that way a user could pre-fill the form (possibly even have it validated in JS), and then submit it once they come back online.</p>
<p>If you’re doing this, remember to suppress “submit on enter” as well, and make sure the user knows why submitting won’t work at the moment.</p>
<p><strong>UPDATE:</strong> I found a better way to handle this - by storing form submissions in <code>localStorage</code> and then checking for them once the connection comes back online. Read about it in <a href="https://mxb.at/blog/offline-forms/">“Offline-Friendly Forms”</a>.</p>
<h2 id="h-further-reading"><a class="heading-anchor" href="https://murathangoktas.github.io/blog/why-election-debates-are-a-must/#h-further-reading" aria-hidden="true">#</a> Further Reading</h2>
<ul>
<li>Intro: <a href="http://offlinefirst.org/">OfflineFirst.org</a></li>
<li>Google Developers: <a href="https://developers.google.com/web/fundamentals/instant-and-offline/web-storage/offline-for-pwa">Offline Storage</a></li>
<li>Jake Archibald at I/O 2016: <a href="https://www.youtube.com/watch?v=cmGr0RszHc8">Building offline-first PWAs</a> (Video)</li>
</ul>

            ]]></content>
        </entry>
        <entry>
            <title>Multi-index Bloom filter</title>
            <link href="https://murathangoktas.github.io/blog/multi-index-Bloom-filter/"/>
            <updated>2023-05-01T00:00:00Z</updated>
            <id>https://murathangoktas.github.io/blog/multi-index-Bloom-filter/</id>
            <content type="html"><![CDATA[
                <figure>
  <img src="https://murathangoktas.github.io/blog/multi-index-Bloom-filter/cover.jpg" alt="" />
</figure>
<p class="lead">Multi-index Bloom filter (mi-Bf) is a flavour of the Bloom filter. I spent most of my Master's studies working on it and developed a long-read mapper, and a global ancestry inference model. First one failed, second one succeeded. To understand why we first have to understand mi-Bf.</p>
<p>Earlier this week, I was sitting in a train on my way to speak at a local meetup. InterCity trains in Austria all have WIFI now, so I was doing some last-minute work on my slides online. Train WIFI being what it is though, the network wasn’t exactly reliable. The connection kept dropping everytime we went through a tunnel or too many passengers were logged on.</p>
<p>This is quite a common scenario. People are on the move, network coverage can be poor, internet connections fail. Luckily, we can prepare our websites for this and make them more resilient by <a href="https://bitsofco.de/bitsofcode-pwa-part-1-offline-first-with-service-worker/">building them offline-first</a>.</p>
<p>Offline support is awesome, however your users might not be aware of these capabilites - and they shouldn’t have to be. In some cases they might not even know that they’ve gone offline. That’s why it’s important to communicate what’s going on.</p>
<p>Chances are not <strong>every</strong> part of your site will work offline. Certain things may not be cached, others may require server interaction. This is fine of course, but the interface should reflect that. Just like a responsive layout adapts to changes in viewport size, your offline-optimized site should adapt to changes in connectivity.</p>
<h2 id="h-checking-for-offline"><a class="heading-anchor" href="https://murathangoktas.github.io/blog/multi-index-Bloom-filter/#h-checking-for-offline" aria-hidden="true">#</a> Checking for Offline</h2>
<p>The key ingredients here are the <code>offline</code> event and the <code>navigator.onLine</code> property. By combining them, we can check for network changes and react accordingly.</p>
<p>Here’s an example of a simple connectivity check:</p>
<pre class="language-js"><code class="language-js"><span class="token keyword">let</span> isOffline <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span><br />window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'load'</span><span class="token punctuation">,</span> checkConnectivity<span class="token punctuation">)</span><span class="token punctuation">;</span><br /><br /><span class="token comment">// when the page has finished loading,</span><br /><span class="token comment">// listen for future changes in connection</span><br /><span class="token keyword">function</span> <span class="token function">checkConnectivity</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />  <span class="token function">updateStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br />  window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'online'</span><span class="token punctuation">,</span> updateStatus<span class="token punctuation">)</span><span class="token punctuation">;</span><br />  window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'offline'</span><span class="token punctuation">,</span> updateStatus<span class="token punctuation">)</span><span class="token punctuation">;</span><br /><span class="token punctuation">}</span><br /><br /><span class="token comment">// check if we're online, set a class on &lt;html> if not</span><br /><span class="token keyword">function</span> <span class="token function">updateStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> navigator<span class="token punctuation">.</span>onLine <span class="token operator">!==</span> <span class="token string">'undefined'</span><span class="token punctuation">)</span><span class="token punctuation">{</span><br />    isOffline <span class="token operator">=</span> <span class="token operator">!</span>navigator<span class="token punctuation">.</span>onLine<span class="token punctuation">;</span><br />    document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">toggle</span><span class="token punctuation">(</span><span class="token string">'is-offline'</span><span class="token punctuation">,</span> isOffline<span class="token punctuation">)</span><span class="token punctuation">;</span><br />    <span class="token operator">...</span><br />  <span class="token punctuation">}</span><br /><span class="token punctuation">}</span></code></pre>
<p>⚠️ Note: With the <code>online</code> event, there’s a slight possibility of false positives: A user might be connected to a network (which is interpreted as being online), but something higher up might block actual internet access. The <code>offline</code> event is a bit more reliable, in the sense that an “offline” user can be expected <strong>NOT</strong> to have access.</p>
<h2 id="h-get-notified"><a class="heading-anchor" href="https://murathangoktas.github.io/blog/multi-index-Bloom-filter/#h-get-notified" aria-hidden="true">#</a> Get Notified</h2>
<p>Now we want to display some kind of notification to offline users, so they know what’s going on. This can be done in a number of ways; however I would recommend using <code>aria-live</code> regions to make it accessible and have screen readers announce the connection change as well.</p>
<p>Using such a notification bar is pretty straightforward. First, define an element to display messages on your page:</p>
<pre class="language-html"><code class="language-html"><span class="token comment">&lt;!-- notification container --></span><br /><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <br />  <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>notification<span class="token punctuation">"</span></span> <br />  <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>notification<span class="token punctuation">"</span></span> <br />  <span class="token attr-name">aria-live</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>assertive<span class="token punctuation">"</span></span> <br />  <span class="token attr-name">aria-relevant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <br />  <span class="token attr-name">hidden</span><br /><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code></pre>
<p>The <code>aria-live</code> attribute tells screen readers to announce changes to this element. “assertive” means it will interrupt whatever it is currently announcing at the time and prioritize the new message. The <code>aria-relevant</code> tells it to listen for changes in the text content of the element.</p>
<p>You can extend the handler function from before to populate the notification area whenever you detect that a user has gone offline:</p>
<pre class="language-js"><code class="language-js"><span class="token keyword">function</span> <span class="token function">updateStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />  <span class="token operator">...</span><br />  <span class="token keyword">const</span> notification <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'#notification'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br />  <span class="token keyword">if</span> <span class="token punctuation">(</span>isOffline<span class="token punctuation">)</span> <span class="token punctuation">{</span><br />    notification<span class="token punctuation">.</span>textContent <span class="token operator">=</span> <span class="token string">'You appear to be offline right now.'</span><span class="token punctuation">;</span><br />    notification<span class="token punctuation">.</span><span class="token function">removeAttribute</span><span class="token punctuation">(</span><span class="token string">'hidden'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br />  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span><br />    notification<span class="token punctuation">.</span>textContent <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">;</span><br />    notification<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">'hidden'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br />  <span class="token punctuation">}</span><br /><span class="token punctuation">}</span></code></pre>
<p>This is a very simple implementation - you can of course always get a bit fancier with an animated notification bar (or “toast message”). There are also some nice <a href="https://getmdl.io/components/index.html#snackbar-section">pre-made components</a> for this.</p>
<p>If you’re reading this on <a href="https://mxb.at/">my site</a>, you can see a version of these notifications in action if you simply switch off your WIFI for a second.<br />
Go ahead, I’ll wait.</p>
<p>If you’re somewhere else or your browser doesn’t support service worker / offline events, here’s how this could look:</p>
<div class="extend" style="margin-top:2rem;">
  <video poster="https://murathangoktas.github.io/blog/multi-index-Bloom-filter/offline-notification.png" width="944" height="528" alt="Offline Notification" controls="">
    <source src="https://murathangoktas.github.io/blog/multi-index-Bloom-filter/offline-notification.webm" type="video/webm" />
    <source src="https://murathangoktas.github.io/blog/multi-index-Bloom-filter/offline-notification.mp4" type="video/mp4" />
  </video>
</div>
<h2 id="h-telling-the-user-what%E2%80%99s-available"><a class="heading-anchor" href="https://murathangoktas.github.io/blog/multi-index-Bloom-filter/#h-telling-the-user-what%E2%80%99s-available" aria-hidden="true">#</a> Telling the User what’s available</h2>
<p>Notifications are a good start, but it would be even nicer if we could give the user some visual indication of which parts they can actually use offline, and which not.</p>
<p>To do this, we can loop over all the links on page load and check their <code>href</code> against the cache. If they point to a cached resource (e.g. will work offline), they get a special class.</p>
<pre class="language-js"><code class="language-js"><span class="token keyword">const</span> links <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">'a[href]'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br />Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>links<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">link</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span><br />  caches<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span>link<span class="token punctuation">.</span>href<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">ignoreSearch</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">response</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span><br />    <span class="token keyword">if</span> <span class="token punctuation">(</span>response<span class="token punctuation">)</span> <span class="token punctuation">{</span><br />      link<span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">'is-cached'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br />    <span class="token punctuation">}</span><br />  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>
<p>Once the <code>offline</code> event fires, we toggle a class on the body and visually disable all links that aren’t cached. This should only apply to URLs, so we can ignore <code>tel:</code>, <code>mailto:</code> and anchor links.</p>
<pre class="language-scss"><code class="language-scss"><span class="token selector">.is-offline </span><span class="token punctuation">{</span><br />  <span class="token comment">/* disable all links to uncached pages */</span><br />  <span class="token property">a</span><span class="token punctuation">:</span><span class="token function">not</span><span class="token punctuation">(</span>.is-cached<span class="token punctuation">)</span> <span class="token punctuation">{</span><br />    <span class="token property">cursor</span><span class="token punctuation">:</span>not-allowed<span class="token punctuation">;</span><br />    <span class="token property">pointer-events</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span><br />    <span class="token property">opacity</span><span class="token punctuation">:</span>.5<span class="token punctuation">;</span><br />  <span class="token punctuation">}</span><br />  <span class="token comment">/* ignore anchors, email and phone links */</span><br />  <span class="token selector">a[href^="#"],<br />  a[href^="mailto"],<br />  a[href^="tel"] </span><span class="token punctuation">{</span><br />    <span class="token property">cursor</span><span class="token punctuation">:</span>auto<span class="token punctuation">;</span><br />    <span class="token property">pointer-events</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span><br />    <span class="token property">opacity</span><span class="token punctuation">:</span>1<span class="token punctuation">;</span><br />  <span class="token punctuation">}</span><br /><span class="token punctuation">}</span></code></pre>
<h2 id="h-offline-forms"><a class="heading-anchor" href="https://murathangoktas.github.io/blog/multi-index-Bloom-filter/#h-offline-forms" aria-hidden="true">#</a> Offline Forms</h2>
<p>Another way we might use this is to prevent users from filling out forms. Most forms pass data to the server and require a connection to work, so they won’t be very useful when offline.</p>
<p>What’s worse is that users might not know there is a problem until it’s too late: imagine filling out a lengthy form and finally hitting the submit button, only to find a network connection error page and all your inputs gone. That’s frustrating.</p>
<pre class="language-scss"><code class="language-scss"><span class="token comment">/* Disable Forms when offline */</span><br /><span class="token selector">.is-offline form </span><span class="token punctuation">{</span><br />  <span class="token property">position</span><span class="token punctuation">:</span>relative<span class="token punctuation">;</span><br />  <span class="token property">opacity</span><span class="token punctuation">:</span>.65<span class="token punctuation">;</span><br />  <span class="token property">cursor</span><span class="token punctuation">:</span>not-allowed<span class="token punctuation">;</span><br />  <span class="token property">pointer-events</span><span class="token punctuation">:</span>none<span class="token punctuation">;</span><br />  <br />  <span class="token selector"><span class="token parent important">&amp;</span>::after </span><span class="token punctuation">{</span><br />    <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">'Sorry, you\'re offline.'</span><span class="token punctuation">;</span><br />    <span class="token property">display</span><span class="token punctuation">:</span>block<span class="token punctuation">;</span><br />    <span class="token property">position</span><span class="token punctuation">:</span>absolute<span class="token punctuation">;</span><br />    <span class="token property">top</span><span class="token punctuation">:</span>50%<span class="token punctuation">;</span><br />    <span class="token property">left</span><span class="token punctuation">:</span>50%<span class="token punctuation">;</span><br />    <span class="token property">transform</span><span class="token punctuation">:</span><span class="token function">translate</span><span class="token punctuation">(</span>-50%<span class="token punctuation">,</span> -50%<span class="token punctuation">)</span><span class="token punctuation">;</span><br />    <span class="token property">color</span><span class="token punctuation">:</span>#FFFFFF<span class="token punctuation">;</span><br />    <span class="token property">background-color</span><span class="token punctuation">:</span>#2D2D2D<span class="token punctuation">;</span><br />    <span class="token property">padding</span><span class="token punctuation">:</span>1rem 2rem<span class="token punctuation">;</span><br />  <span class="token punctuation">}</span><br /><span class="token punctuation">}</span></code></pre>
<figure>
  <img src="https://murathangoktas.github.io/blog/multi-index-Bloom-filter/form-offline.jpg" alt="a disabled form with the words 'sorry, youre offline' in a box on top" />
  <figcaption>No contact forms in offline country.</figcaption>
</figure>
<p>That effectively disables every form on the page, indicating that this functionality is currently not available. Depending on what your form does, you might also consider applying these styles just to the submit button - that way a user could pre-fill the form (possibly even have it validated in JS), and then submit it once they come back online.</p>
<p>If you’re doing this, remember to suppress “submit on enter” as well, and make sure the user knows why submitting won’t work at the moment.</p>
<p><strong>UPDATE:</strong> I found a better way to handle this - by storing form submissions in <code>localStorage</code> and then checking for them once the connection comes back online. Read about it in <a href="https://mxb.at/blog/offline-forms/">“Offline-Friendly Forms”</a>.</p>
<h2 id="h-further-reading"><a class="heading-anchor" href="https://murathangoktas.github.io/blog/multi-index-Bloom-filter/#h-further-reading" aria-hidden="true">#</a> Further Reading</h2>
<ul>
<li>Intro: <a href="http://offlinefirst.org/">OfflineFirst.org</a></li>
<li>Google Developers: <a href="https://developers.google.com/web/fundamentals/instant-and-offline/web-storage/offline-for-pwa">Offline Storage</a></li>
<li>Jake Archibald at I/O 2016: <a href="https://www.youtube.com/watch?v=cmGr0RszHc8">Building offline-first PWAs</a> (Video)</li>
</ul>

            ]]></content>
        </entry>
        <entry>
            <title>How to be a number 6</title>
            <link href="https://murathangoktas.github.io/blog/how-to-be%20number-6/"/>
            <updated>2023-05-01T00:00:00Z</updated>
            <id>https://murathangoktas.github.io/blog/how-to-be%20number-6/</id>
            <content type="html"><![CDATA[
                <figure>
  <img src="https://murathangoktas.github.io/blog/how-to-be%20number-6/cover.jpg" alt="" />
</figure>
<p class="lead">Türkiye'de amatör olarak 11'e karşı 11 oynama kültürü yok denecek kadar az ve ben ne kadar halısahada futbol kültürüyle büyümüş olsam da 11'e 11 futbolda orta saha pozisyonuna adapte olmakta zorlandım. Bu süreci de burada yazdım.</p>
<p>Kanada’da futbol oynamanın en düzenli ve sıradan hali, kalibrenize uygun 11’e 11 oynayan bir takıma kaydolmak. Ben de arkadaşlarımın daveti üzerine <a href="https://www.instagram.com/dinamoanatolia_fc/">Dinamo Anatolia</a> antremanına katıldım. Takımda beğenildikten sonra yıllarıdır hayalimde olan Sergiq Busquets pozisyonunda kendime ilk 11’de yer bulmaya başladım. Özellike Xavi ve Sergio Busquets’in mükemmel tek dokunuş, pas ve oyun görüşleriyle sahanın en kritik bölgesi olan orta sahayı ele geçirmeleri hep bana kendimi pozisyonda hayal ettirmişti.</p>
<p>Ne kadar antremanlarla kondisyon, teknik ve takım arkadaşları tanısak da gerçek maçtaki 11’e 11 deneyimi sadece maçla oluyor ve ben ilk maçımda çuvalladım. Bana göre ana sebepler şunlardı:</p>
<ol>
<li>Doğru pozisyon almamak</li>
<li>Top bendeyken çevremin farkında olmamak</li>
<li>Kritik zamanlarda adam eksiltememek</li>
<li>Baskıda top çalamamak</li>
</ol>
<p>Bana göre en çok bu 4 yetersizlik beni hayalimdeki orta saha oyuncusu olmaktan alıkoyuyordu.</p>
<h2 id="h-1-do%C4%9Fru-pozisyon-almamak"><a class="heading-anchor" href="https://murathangoktas.github.io/blog/how-to-be%20number-6/#h-1-do%C4%9Fru-pozisyon-almamak" aria-hidden="true">#</a> 1. Doğru pozisyon almamak</h2>
<p>11’e 11 oynamaya yeni başlayan ya da yeni bir pozisyona geçen bir oyuncunu en çok zorlandığı kısım oyunun akışına göre nerede pozisyon alacağını bilmesidir. Ve halısahada atak pozisyonlarında oynamaya alışık birisi olarak en çok, bir alışkanlığımı yenmem gerekti <em>topa değil topun olması gerektiği yere gitmek</em>.</p>
<video width="650" controls="" autoplay="">
    <source src="https://murathangoktas.github.io/blog/how-to-be%20number-6/clip-1.mp4" type="video/mp4" />
</video>
<p>Bu pozisyonda başta çok güzel hamleler yapıyorum. Topu defanstan doğru noktada alıyor ve arka ayağımla kontrol edip topu güzel bir alan sürüyorum; ancak 6 numara pozisyonunda oynayan birisi olarak pasımı verdikten sonra ileriye koşmaya devam etmek kesinlikle bir halısaha alışkanlığı. Bu koşuyu yapmamın üç büyük zararı var:</p>
<ol>
<li>Zaten kalabalık olan 3. bölgeyi (sahayı bizim kaleden rakip kaleye doğru 3’e ayırdığımızda 3. olan bölge) daha kalabalıklaştırıyorum. Bunun yerine alanın bol olduğu pas verdiğim pozisyonda kalsam takım arkadaşım için çok daha iyi bir pas opsiyonu olacağım.</li>
<li>Rakip karşı atağa kalkarsa orta saha bloğumuzu yerinde bulmayacak ve çok daha rahat ilerleyecek.</li>
<li>Ve belki de en önemlisi, enerjimi tasarruflu kullanmıyorum.</li>
</ol>
<p>Enerjiyi doğru kullanmak futbolda çok ama çok kritik. Mesela, Messi profesyonel bir futbolcu ve istese 90. çok kolay bir şekilde bir adam seçip onu markaj altına alabilir. Bunun için yaklaşık olarak jogging temposunda 90 dakikada 9-10 km yeterli olacaktır ki bunu amatör halısaha oyuncusu bile çıkarabilir. Ancak Messi’yi veya Alex de Souza’yı takım kaybettiğinde yürüyor olarak görürüz. İşte bunun sebebi futbolda yorgunluğun patlatyıcı güce ve çok daha önemlisi oyun görüşüve konsantrasyona büyük darbe indirmesidir. Enerjisini düzgün kullanmayan bir oyuncu nefes nefese kalacak, ayağı yere güçlü basmayacak ve top ona geldiğinde gerekli olan hamleleri yapamayacaktır.</p>
<p>Ve böylece oyunumu geliştirdiğim konulardan birisi de doğru mevkiimi muhafaza etmek ve gerekli zamanlarda dinlenerek oldu. Bunu aslolarak topa doğru gitme iç güdümü kırarak ve doğru mevkideyken bazen yürümeye kadar hareketimi düşürerek oldu.</p>
<h2 id="h-2-%C3%A7evre-fark%C4%B1ndal%C4%B1%C4%9F%C4%B1"><a class="heading-anchor" href="https://murathangoktas.github.io/blog/how-to-be%20number-6/#h-2-%C3%A7evre-fark%C4%B1ndal%C4%B1%C4%9F%C4%B1" aria-hidden="true">#</a> 2. Çevre farkındalığı</h2>

            ]]></content>
        </entry>
        <entry>
            <title>A year in review: 2020</title>
            <link href="https://murathangoktas.github.io/blog/year-in-review-2020/"/>
            <updated>2020-12-19T00:00:00Z</updated>
            <id>https://murathangoktas.github.io/blog/year-in-review-2020/</id>
            <content type="html"><![CDATA[
                <p class="lead">I don't think I have to tell anyone why this year sucked, what with the pandemic and all. 2020 is going down in history as a massive crapstorm.</p>
<p>Still, I want to <a href="https://murathangoktas.github.io/blog/year-in-review-2019">continue the tradition</a> of “end-of-the-year” blogposts and since there’s already enough doom out there these days, I’m trying to focus on the good things that happened instead.</p>
<h2 id="h-work"><a class="heading-anchor" href="https://murathangoktas.github.io/blog/year-in-review-2020/#h-work" aria-hidden="true">#</a> Work</h2>
<p>The web industry is among the fortunate ones that are very well suited for remote and distributed work, which is why I was able to keep working from home throughout most of the year.</p>
<p>We rented a great new office in the spring that I’ve hardly been to since, but our team at <a href="https://www.codista.com/">Codista</a> is quite used to working remote and we already had all the necessary infrastructure in place.</p>
<p>We had more than enough projects on our hands and we did some really interesting, challenging stuff that I can’t talk about (yet) 😉 - so all in all, work was good.</p>
<h2 id="h-writing"><a class="heading-anchor" href="https://murathangoktas.github.io/blog/year-in-review-2020/#h-writing" aria-hidden="true">#</a> Writing</h2>
<p>I wrote nine posts in 2020 - which is fewer than last year, but all things considered, that’s ok. The most popular ones were:</p>
<ul>
<li><a href="https://murathangoktas.github.io/blog/the-return-of-the-90s-web/">The Return of the 90s Web</a>: a look at some early trends on the web and how they might be resurrected</li>
<li><a href="https://murathangoktas.github.io/blog/emergency-website-kit/">The Emergency Website Kit</a>: an attempt to build a template for critical information websites</li>
<li><a href="https://murathangoktas.github.io/blog/color-theme-switcher/">Color Theme Switcher</a>: a case study of this blog’s weird color scheme feature (see header)</li>
</ul>
<h2 id="h-side-projects"><a class="heading-anchor" href="https://murathangoktas.github.io/blog/year-in-review-2020/#h-side-projects" aria-hidden="true">#</a> Side Projects</h2>
<p>When the first lockdown hit, I kept occupied by building things - mostly in and around Eleventy, which helped me get ideas off the ground quickly. Here are some of these:</p>
<ul>
<li>
<p><a href="https://github.com/maxboeck/eleventastic">Eleventastic</a>: my personal starter kit for Eleventy projects. I wanted to get rid of “external” build tools like Gulp and manage all pipelines inside Eleventy itself.</p>
</li>
<li>
<p><a href="https://github.com/maxboeck/resume">Eleventy Resumé</a>: a simple microsite that functions as a CV/Resumé in web and print.</p>
</li>
<li>
<p><a href="https://whimsical.club/">Whimsical Website Club</a>: a collection of websites that spark joy by doing things a little bit less serious.</p>
</li>
</ul>
<h2 id="h-speaking"><a class="heading-anchor" href="https://murathangoktas.github.io/blog/year-in-review-2020/#h-speaking" aria-hidden="true">#</a> Speaking</h2>
<p>I had some talks planned for 2020 which of course didn’t happen. I did a few online talks though and I participated in <a href="https://inclusivedesign24.org/2020/">Inclusive Design 24</a>, a free 24-hour livestream event where I talked about another side project, the “Emergency Website Kit”:</p>
<div class="embed embed--16-9">
    <iframe width="560" height="315" src="https://www.youtube-nocookie.com/embed/8RdrRCq8VzU?start=53" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe>
</div>
<h2 id="h-events"><a class="heading-anchor" href="https://murathangoktas.github.io/blog/year-in-review-2020/#h-events" aria-hidden="true">#</a> Events</h2>
<p>The <a href="http://webclerks.at/">Webclerks</a> team and I had the pleasure of hosting our own little virtual meetup event <a href="https://webclerks.at/vienna-calling/">“Vienna Calling”</a> on Twitch, and we had a phenomenal lineup. A big thank you again to all the speakers who joined us, as well as the rest of the team who made this happen behind the scenes.</p>
<p>BTW: You can find the full event as a playlist on Youtube:</p>
<div class="embed embed--16-9">
    <iframe width="560" height="315" src="https://www.youtube.com/embed/videoseries?list=PLSJe-hizqRL0qMDlLzBp1WZZXJFdmP6lz" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe>
</div>
<h2 id="h-traveling"><a class="heading-anchor" href="https://murathangoktas.github.io/blog/year-in-review-2020/#h-traveling" aria-hidden="true">#</a> Traveling</h2>
<p>In the summer, the situation improved enough for me and my girlfriend to take some much needed vacation time. With international travel still closed, we decided to go on a road trip through Austria instead and it was awesome. This country has some really beautiful places in store.</p>
<!-- <blockquote class="twitter-tweet"><p lang="en" dir="ltr">I&#39;m staying in this cabin in the mountains for a few days without internet. So if there&#39;s any dev twitter drama kindly do it without me 😉 <a href="https://t.co/O62x9NoxG0">pic.twitter.com/O62x9NoxG0</a></p>&mdash; Max Böck (@mxbck) <a href="https://twitter.com/mxbck/status/1289958987647995904?ref_src=twsrc%5Etfw">August 2, 2020</a></blockquote> -->
<figure class="extend">
    <img src="https://murathangoktas.github.io/blog/year-in-review-2020/mountains.jpg" alt="A small cabin in the Austrian alps, under a clear blue sky" loading="lazy" />
    <figcaption>The Kanisalpe mountain range in Vorarlberg, Austria</figcaption>
</figure>
<h2 id="h-we-need-the-web"><a class="heading-anchor" href="https://murathangoktas.github.io/blog/year-in-review-2020/#h-we-need-the-web" aria-hidden="true">#</a> We need the Web</h2>
<p>This year, more than ever, I realized the enormous impact the web has on all of us, and how important it is to keep it free and open. I know we’re all sick of doing things online all the time, but imagine for a moment what this year would have looked like had the web never been invented.</p>
<p>Millions of people would be completely isolated, even more would be out of their jobs. Schools could not operate. Civil rights movements would be almost impossible to organize. Global research projects like the development of a vaccine would take years longer. And you probably wouldn’t have seen the faces of your loved ones in months.</p>
<p>The web has become such an integral part of our lives that we sometimes take it for granted. It’s not. In fact this shitshow of a year should probably remind us that we need to take really good care of the things that are still connecting us.</p>
<h2 id="h-goals-for-2021"><a class="heading-anchor" href="https://murathangoktas.github.io/blog/year-in-review-2020/#h-goals-for-2021" aria-hidden="true">#</a> <s>Goals for 2021</s></h2>
<p>I’m not going to compare my goals from last year with what I’ve accomplished in 2020. I don’t think it matters. Give yourself a break this year - it’s OK if things didn’t turn out the way you wanted.</p>
<p>I’ll see you all in 2021. And hopefully we’ll all have a vaccine in our system and a better year ahead of us.</p>
<h2 id="h-other-year-in-review-posts"><a class="heading-anchor" href="https://murathangoktas.github.io/blog/year-in-review-2020/#h-other-year-in-review-posts" aria-hidden="true">#</a> Other Year-in-Review Posts</h2>
<p>Have you written one of these yourself? Let me know and get added here.</p>
<ul>
<li><a href="https://hiddedevries.nl/en/blog/2020-12-17-2020-in-review/">Hidde de Vries</a></li>
<li><a href="https://marcus.io/blog/my-2020">Marcus Herrmann</a></li>
</ul>

            ]]></content>
        </entry>
        <entry>
            <title>The IndieWeb for Everyone</title>
            <link href="https://murathangoktas.github.io/blog/the-indieweb-for-everyone/"/>
            <updated>2020-11-12T00:00:00Z</updated>
            <id>https://murathangoktas.github.io/blog/the-indieweb-for-everyone/</id>
            <content type="html"><![CDATA[
                <p class="lead">Dear Reader,</p>
<p>Since there’s a good chance that you <em>-like me-</em> are involved in web development and/or have a special interest in technology, I want you to play along and engage in a thought experiment for this post:</p>
<p><strong>Imagine you’re a regular user.</strong></p>
<p>Imagine you have never heard of git branches, postgres or a “webpack config” (lucky you). You really don’t care about all of that, but you do care about your friends and your connections online.</p>
<p>Ever since Elon took over (and actually even some time before that) Twitter has been feeling increasingly hostile. People start leaving, and you hear them talk about alternatives. You’re curious, so you type “mastodon” into Google and see what comes up.</p>
<p>You find the website and want to sign up. It tells you to choose a server:</p>
<figure class="extend">
    <img src="https://murathangoktas.github.io/blog/the-indieweb-for-everyone/servers.png" alt="mastodon server list" />
    <figcaption>Ummmm</figcaption>
</figure>
<p>Ok wait, you wanted to join <em>mastodon</em>, what’s all this now? Tildes? Furries? Some Belgian company? Why do you have to apply? Everyone else had that <code>mastodon.social</code> handle - Can’t you just use that? The real one? What the hell is a <em>fediverse</em>?</p>
<p>Confused, you close the site. This seems like it’s made for someone else. Maybe you’ll stick around on Twitter for a while longer, while it slowly burns down.</p>
<hr />
<p>You can be a developer again now.</p>
<p>You and I know the reasons for that experience. We know that a decentralized system has to look like this, and that the choice of instance doesn’t even matter all that much. But I’ve heard this exact story a couple of times now, all from people outside my IT filter bubble.</p>
<p>Why was it so easy to drive these people away?</p>
<h2 id="h-the-web-as-a-commodity"><a class="heading-anchor" href="https://murathangoktas.github.io/blog/the-indieweb-for-everyone/#h-the-web-as-a-commodity" aria-hidden="true">#</a> The Web as a Commodity</h2>
<p>Being on the web has been heavily commoditized.</p>
<p>In the days of IRC and message boards, or later in the 2000s blogging era, federation was very much the norm. It was the default mode of the web: people grouping together in small communities around shared interests, but scattered on many different sites and services. It was normal to explore, find new places and discover new things by venturing out.</p>
<p>Through the rise of social media though, people have gotten used to being in one place all the time. Now we expect a system that’s easy to set up, handles millions of users at once and makes every interaction frictionless. We expect it to know what we want, and give it to us instantly. Anything too weird or tech-y and you start to lose people.</p>
<p>Mastodon is not supposed to be a second Twitter. Many of its features were designed specifically to avoid becoming another content silo and repeating the same mistakes, yet the assumption seems to be that everything should stay the same as before.</p>
<p>It’s like everyone has spent the last few years in a giant all-inclusive resort, screaming at each other for attention at the buffet. Now we’re moving into nice little bed-and-breakfast places, but we’re complaining because it takes slightly more effort to book a room, and the free WIFI isn’t as fast.</p>
<p><strong>Maybe its time to rethink some of these expectations.</strong> Maybe we need some of that early internet vibe back and be ok with smaller, closer communities. Maybe we can even get some of the fun back and start exploring again, instead of expecting everything to be automatically delivered to us in real time.</p>
<p>We can remind ourselves of what social media used to be: a way to connect around shared interests, talk to friends, and discover new content. No grifts, no viral fame, no drama.</p>
<h2 id="h-lowering-the-barrier"><a class="heading-anchor" href="https://murathangoktas.github.io/blog/the-indieweb-for-everyone/#h-lowering-the-barrier" aria-hidden="true">#</a> Lowering the Barrier</h2>
<p>Adjusting expectations is one part - but at the same time, we as developers have to try and make these systems as approachable as possible without compromising on their independence. A lot of alternative content publication methods are still very much geared towards the IT bubble.</p>
<p>You could loosely map some of them by how easy it is to get started if you have no technical knowledge:</p>
<figure class="extend">
    <img src="https://murathangoktas.github.io/blog/the-indieweb-for-everyone/chart.jpg" alt="chart of different methods of publishing content, on an axis ranging from 'low barrier' (left) to 'high barrier' (right)" />
</figure>
<p>Generally speaking: <strong>The more independence a technology gives you, the higher its barrier for adoption.</strong></p>
<p>I love the <a href="https://indieweb.org/">IndieWeb</a> and its tools, but it has always bothered me that at some point they basically require you to have a webdevelopment background.</p>
<p>How many of your non-tech friends publish RSS feeds? Have you ever seen webmentions used by someone who isn’t a developer? Hell, even for professional devs it’s hard to wire all the different parts together if you want to build a working alternative to social media.</p>
<p>If you want the independence and control that comes with some of these IndieWeb things, you just have to get your hands dirty. You can’t do it without code, APIs, servers and rolling your own solutions. It’s just harder.</p>
<p><strong>My point is this: it shouldn’t be.</strong></p>
<p>Owning your content on the web should not require extensive technical knowledge or special skills. It should be just as easy as signing up for a cellphone plan.</p>
<p>I know it’s no small feat to lower that barrier. Making things feel easy and straightforward while handling the technical complexity behind them is quite a challenge. Not to mention the work and financial cost involved in running systems that don’t generate millions of ad revenue.</p>
<p><a href="https://mastodon.social/">Mastodon</a>, <a href="https://ghost.org/">Ghost</a>, <a href="https://www.tumblr.com/">Tumblr</a>, <a href="https://micro.blog/">micro.blog</a> and others are working hard on that frontier; yet I feel they are still not widely used by the average person looking to share their mind.</p>
<h2 id="h-seizing-momentum"><a class="heading-anchor" href="https://murathangoktas.github.io/blog/the-indieweb-for-everyone/#h-seizing-momentum" aria-hidden="true">#</a> Seizing Momentum</h2>
<p>I think we’re at a special moment right now. People have been fed up with social media and its various problems (surveillance capitalism, erosion of mental health, active destruction of democracy, bla bla bla) for quite a while now. But it needs a special bang to get a critical mass of users to actually pack up their stuff and move.</p>
<p>When that happens, we have the chance to build something better. We could enable people to connect and publish their content on the web independently – the technology for these services is already there. For that to succeed though, these services have to be useable by all people - not just those who understand the tech.</p>
<p>Just like with migration to another country, it takes two sides to make this work: Easing access at the border to let folks in, and the willingness to accept a shared culture - to make that new place a home.</p>

            ]]></content>
        </entry></feed>
